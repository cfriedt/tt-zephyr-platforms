diff --git a/scripts/ci/check_compliance.py b/scripts/ci/check_compliance.py
index 13a2b4839e9..73b45ed0f65 100755
--- a/scripts/ci/check_compliance.py
+++ b/scripts/ci/check_compliance.py
@@ -291,7 +291,7 @@ class CheckPatch(ComplianceTest):
             cmd = [checkpatch]
 
         cmd.extend(['--mailback', '--no-tree', '-'])
-        with subprocess.Popen(('git', 'diff', '--no-ext-diff', COMMIT_RANGE),
+        with subprocess.Popen(('git', 'diff', '--no-ext-diff', COMMIT_RANGE, '--', ':!*.diff', ':!*.patch'),
                                 stdout=subprocess.PIPE,
                                 cwd=GIT_TOP) as diff:
             try:
@@ -742,7 +742,7 @@ class KconfigCheck(ComplianceTest):
 
         # Use hard coded paths for Zephyr for tests, samples and ext. module root
         tmp_output = git("grep", "-I", "-h", "--perl-regexp", regex, "--", ":tests", ":samples",
-                         ":modules", cwd=ZEPHYR_BASE, ignore_non_zero=True)
+                         ":modules", cwd=Path(GIT_TOP), ignore_non_zero=True)
 
         if len(tmp_output) > 0:
             kconfigs += tmp_output + "\n"
@@ -1255,6 +1255,7 @@ flagged.
         "CRC",  # Used in TI CC13x2 / CC26x2 SDK comment
         "DEEP_SLEEP",  # #defined by RV32M1 in ext/
         "DESCRIPTION",
+        "DMC_RUN_SMBUS_TESTS",
         "ERR",
         "ESP_DIF_LIBRARY",  # Referenced in CMake comment
         "EXPERIMENTAL",
@@ -1412,6 +1413,7 @@ class SysbuildKconfigCheck(KconfigCheck):
     # A different allowlist is used for symbols prefixed with SB_CONFIG_ (omitted here).
     UNDEF_KCONFIG_ALLOWLIST = {
         # zephyr-keep-sorted-start re(^\s+")
+        "DMC_BOARD",
         "FOO",
         "MY_IMAGE", # Used in sysbuild documentation as example
         "OTHER_APP_IMAGE_NAME", # Used in sysbuild documentation as example
@@ -2017,6 +2019,11 @@ class KeepSorted(ComplianceTest):
         if not mime_type.startswith("text/"):
             return
 
+        skip_exts = {".patch", ".diff"}
+        _, ext = os.path.splitext(file)
+        if ext in skip_exts:
+            return
+
         block_data = ""
         in_block = False
 
